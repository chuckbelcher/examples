{"version":3,"sources":["js/recipe.js"],"names":["baseEndpoint","corsproxy","form","document","querySelector","recipeGrid","fetchRecipes","query","res","fetch","data","json","handleSubmit","e","preventDefault","submitBtn","submit","food","value","disabled","recipes","displayRecipes","results","console","log","html","map","recipe","href","title","ingredients","thumbnail","innerHTML","join","addEventListener"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAC,gCAAnB,EAEA;;AACA,MAAMC,SAAS,GAAC,qCAAhB,EAEA;;AACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAb,EAEA;;AACA,MAAMC,UAAU,GAAGF,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAnB;;AAEA,eAAeE,YAAf,CAA4BC,KAA5B,EAAmC;AAC/B,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAER,SAAU,IAAGD,YAAa,MAAKO,KAAM,EAAzC,CAAvB;AACA,QAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,SAAOD,IAAP;AACH;;AAED,eAAeE,YAAf,CAA4BC,CAA5B,EAA+B;AAC3BA,EAAAA,CAAC,CAACC,cAAF;AACA,QAAMC,SAAS,GAAGb,IAAI,CAACc,MAAvB;AACA,QAAMC,IAAI,GAAGf,IAAI,CAACK,KAAL,CAAWW,KAAxB;AACAH,EAAAA,SAAS,CAACI,QAAV,GAAqB,IAArB;AACA,QAAMC,OAAO,GAAG,MAAMd,YAAY,CAACW,IAAD,CAAlC;AACAF,EAAAA,SAAS,CAACI,QAAV,GAAqB,KAArB;AACAE,EAAAA,cAAc,CAACD,OAAO,CAACE,OAAT,CAAd;AACH;;AAED,SAASD,cAAT,CAAwBD,OAAxB,EAAiC;AAC7BG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,QAAMK,IAAI,GAAGL,OAAO,CAACM,GAAR,CAAYC,MAAM,IAAI;AAC/B,WAAO;AACf,uBAAuBA,MAAM,CAACC,IAAK,SAAQD,MAAM,CAACE,KAAM;AACxD,iBAAiBF,MAAM,CAACG,WAAY;AACpC,cAAcH,MAAM,CAACI,SAAP,IAAqB,aAAYJ,MAAM,CAACI,SAAU,UAASJ,MAAM,CAACE,KAAM,cAAc;AACpG;AACA,eALQ;AAMH,GAPY,CAAb;AAQAxB,EAAAA,UAAU,CAAC2B,SAAX,GAAuBP,IAAI,CAACQ,IAAL,CAAU,EAAV,CAAvB;AACH;;AAED/B,IAAI,CAACgC,gBAAL,CAAsB,QAAtB,EAAgCtB,YAAhC","file":"recipe.ceaf59a4.js","sourceRoot":"..","sourcesContent":["//API Endpoint\nconst baseEndpoint=\"http://www.recipepuppy.com/api\"\n\n//needs a cors proxy -- never use with sensitive data\nconst corsproxy=\"https://cors-anywhere.herokuapp.com\"\n\n//Grab the form\nconst form = document.querySelector('form.search')\n\n//Grab Element to put recipes after they are pulled\nconst recipeGrid = document.querySelector('.recipes');\n\nasync function fetchRecipes(query) {\n    const res = await fetch(`${corsproxy}/${baseEndpoint}?q=${query}`);\n    const data = await res.json();\n    return data;\n}\n\nasync function handleSubmit(e) {\n    e.preventDefault();\n    const submitBtn = form.submit\n    const food = form.query.value;\n    submitBtn.disabled = true;\n    const recipes = await fetchRecipes(food);\n    submitBtn.disabled = false;\n    displayRecipes(recipes.results)\n}\n\nfunction displayRecipes(recipes) {\n    console.log(recipes);\n    const html = recipes.map(recipe => {\n        return`<div class=\"recipe\">\n            <a href=\"${recipe.href}\"><h3>${recipe.title}</h3></a>\n            <p>${recipe.ingredients}</p>\n            ${recipe.thumbnail && `<img src=\"${recipe.thumbnail}\" alt=\"${recipe.title} picture\" />`}\n            \n        </div>`\n    });\n    recipeGrid.innerHTML = html.join('');\n}\n\nform.addEventListener('submit', handleSubmit);"]}